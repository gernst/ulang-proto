definitions

curry f x y == f (x, y);
uncurry f (Pair x y) == f x y;

(x, y) == Pair x y;

[] == Nil;
x : xs == Cons x xs;

fail src
  == Failure;

return a src
  == Success a src;

map f (Success a src) == f a src;
map f  Failure == Failure;

bind p f src
  == map f (p src);

orelse (Success a src) p _ == (Success a src);
orelse Failure p src == p src;

alt p q src
  == orelse (p src) q src;

item (Cons a src) == Success a src;
item  Nil == Failure;

match a (Cons a src) == Success a src;
match a (Cons _ src) == Failure;
match a Nil == Failure;

seq f p q
  == bind p (lambda x.
     bind q (lambda y.
     return (f x y)));

pair == seq (,);

input == A : B : C;
blubb == pair (match B) item input;
blabb == alt (match B) (match C) input;
