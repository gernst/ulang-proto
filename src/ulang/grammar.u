grammar
  ulang = def * { ulang };
  
  expr  = app;
  def   = expr "=" expr ";" { Def };
  
  open  = "(" expr ")";
  closed = open | fun | ite | let | matches | id;
  app   = closed closed * { foldl App };

  fun   = "function" cases { Function };
  ite   = "if" expr "then" expr "else" expr { IfThenElse };
  let   = "let" expr "=" expr "in" expr { LetIn };
  match = "match" expr "with" cases { MatchWith };
  
  case  = expr "->" expr { Case };
  cases = case ("|" case) * { (::) };
end
